package days14;

import java.util.Random;

/**
 * @author 이채영
 * @date 2022. 3. 8. - 오후 3:28:17
 * @subject  Chapter6. 객체 지향적 프로그래밍
 * @content               Object Oriented Programming
 *                               OOP
 *                               ch6,7 읽어보기
 */
public class Ex04 {

	public static void main(String[] args) {
		/* 개념 이해 -> 용어 암기***
		 *    (+) 오버로딩 -> 중복함수 , 메서드명은 같은데 매개변수의 타입과 갯수가 다른 함수
		 * 구조적 프로그래밍? 함수 기본이 되는 프로그래밍 방식(기법)
		 * 1. 객체지향적 프로그래밍 -> 자바. c#...
		 *   - 객체지향적 방식으로 개발(프로그래밍)
		 *   - 개발하는 기법
		 *   - (각 용도별) 객체 단위로 프래그래밍 하는 기법 (방식)
		 *   예) 컴퓨터 조립 
		 *   각각의 조립 부풉들 == 객체, 개체 object
		 *   컴퓨터 = object + object + ... + object
		 *   어플리케이션 = object + object + ... + object
		 *   용어정리? 1. 객체지향적 프로그래밍
		 *  2.객체와 클래스
		 *    - 객체object, 개체, 물건? 클래스(설계도)로 실제로 존재하는 것,
		 *                                    사물(유형) 또는 개념(무형)의 객체 
		 *    - 클래스 : 객체의 설계도
		 *    - 인스턴스화 :클래스로 객체를 만드는 과정.
		 *    ex. 집 설계도면(클래스) -> 건축(인스턴스화) -> 대지위의 집(객체) "인스턴스"라고 부른다.
		 *  3. OOP의 특징 ==클래스의 특징
		 *    1) 상속성
		 *    2) 다형성**
		 *    3) 추상화
		 *    4) 캡슐화
		 *    5) 은닉화
		 *    
		 *  4. 객체의 구성 요소 = 기능 + 속성
		 *    1) 객체의 구성요소를 '멤버'라고 부른다.
		 *    2) 속성 property  = 멤버변수  = 필드field= 특성 attribute = 상태
		 *    3) 기능 fuction     = 멤버함수 = 메서드method
		 *     
		 *    클래스?  집(객체)을 짓기위한 설계도면
		 *    건축설계사 = 설계도(클래스)
		 *  5. 클래스 설계하는 과정
		 *       1)객체의 구성요소 파악-> 목록작성
		 *           (기능, 속성)
		 *       2) 클래스 선언
		 *       3)[접근지정자][기타제어자]class 클래스명 [extends 수퍼클래스] [implements인터페이스]
		 *            //클래스 멤버를 선언
		 *            // 기능(필드)선언
		 *            //속성(메서드) 선언
	  	 *        4) 문제점 파악 - 유지, 보수
	
	 	 *        5)상용화
		 *        6)보안문제점 발생 + 멤버(기능, 속성)추가 (확장) = 버전관리
		 *   6. 기본형 - 8가지  byte short int long float double 
		 *                          char
		 *                          boolean  
		 *       참조형 - 클래스, 배열, 인터페이스
		 *                  new 연산자에 의해서 실제 기억공간의 힙이라는 동적영역에 할당되고 스택영역에서 주소를 참조한다.
		 *                  
		 *                  힙                            시작주소
		 *                  [][][][][]              m변수/ 참조변수/배열명
		 *                  시작 주소
		 *                  
		 *                  Random rnd = new Random();
		 *                  클래스를 자료형으로 선언된 (rnd)를 참조변수, 객체라고 한다.
		 *   7. 자동차(객체)를 만들기 위해 설계도 : 클래스
		 *          1) 객체의 구성요소  파악 -> 목록 작성
		 *          2) 클래스 선언        Car 클래스 선언
		 *          3) 객체 생성 - 테스트
		 */          
		           //객체 선언 및 생성하는 형식
		           //클래스명 변수명 = new 클래스명();
		           Car myCar = new Car(); // 인스턴스 생성, 인스턴스화
		          // myCar : 변수명/참조변수/객체
		           
		           //클래스와 객체와 인스턴스의 차이점
		           //[멤버 접근할 때    . 멤버연산자 사용]
		           //객체명.필드
		           //객체명.메서드()
		           
		           myCar.name = "스포츠카-2";     //객체명.필드
		           myCar.speed = 200;
		           System.out.println(myCar.name);
		           //출력기능(메서드)
		           myCar.dispCarInfo();
		           
		           
		           
		           Random rnd = new Random();  //객체 생성
		           rnd.nextInt();                          //객체 안의 메서드 선언
		 
	}

}
